h1 Robo-journalism script editor
p This tool allows for live editing of robo-journalism articles using PUG template files and a CSV data source. The editor incorporates the natural language generation features of #[a(href="https://rosaenlg.org/rosaenlg/3.2.3/index.html" target="_blank") RosaeNLG].

h2 Getting started
p Click "Load CSV file" to get started. This data file should have one row per geographic area. Each area should have an <b>areanm</b> column with its name, an <b>areacd</b> column with its GSS code, and any number of other columns with data or metadata.
p If you want to continue editing an existing PUG file, either click "Load PUG file", or copy-paste the contents of your PUG file into the editor on the left.

h2 Adding data to templates
p Once a data file is loaded, you should have access to three javascript data objects. Firstly <b>place</b> which contains data for the selected area, and can be used like this §<b>#{'#{place.areanm}'}</b>§ to include the place's name in your template, and §<b>#{'#{place.column_name}'}</b>§ to include a place-specific value.
p Secondly, there is <b>places</b>, which contains an array of data objects for each of the local authorities in the dataset - it filters out regions, countries etc.. This can be used to find eg. the highest or lowest place for a particular metric, eg. §<b>#{'#{places.sortBy("column_name").areanm}'}</b>§ would give the name of the place with the highest value.
p Finally, there is <b>lookup</b> which allows data for every place in the dataset to be accessed via its GSS code, eg. §<b>#{'#{lookup["W92000004"].column_name}'}</b>§ would give a data value for Wales. This lookup can also be used to access data for a parent of the selected place. Eg. §<b>#{'#{lookup[place.parentcd].areanm}'}</b>§ would give the name of the selected area's parent – assuming there is a "parentcd" column in the CSV and the parent's data is included as a row.

h2 Simple article demo
p If you want to skip straight to the action, there's a demo CSV dataset and PUG template file so you can see how it works. The output of this demo is used in the #[a(href="https://github.com/robo-embed" target="_blank") robo-embed] Svelte Kit template. #[button(onclick="embedDemo()" class="btn-inline") Click here] to load it.

h2 Scrolly article demo
p A more complex demo, suitable for a localised scrollytelling article. The output of this demo is used in the #[a(href="https://github.com/robo-scrolly" target="_blank") robo-scrolly] Svelte Kit template. #[button(onclick="scrollyDemo()" class="btn-inline") Click here] to load it.

h2 NLG/logic demo
p PUG and RosaeNLG also allow for the possibility of introducing logic and natural language generation (NLG) into your templates. #[button(onclick="nlgDemo()" class="btn-inline") Click here] to see an example.

h2 Saving your progress
p Be sure to save your progress before closing this window! Click "Save PUG file" to download your template a PUG file, or just copy-paste the text from the editor on the left.