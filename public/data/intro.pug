h1 Robo-journalism script editor
p This tool allows for live editing of robo-journalism articles using PUG template files and a CSV data source. The editor incorporates the natural language generation (NLG) features of #[a(href="https://rosaenlg.org/rosaenlg/3.2.3/index.html" target="_blank") RosaeNLG], though they are not necessary for most use cases.

h2 Getting started
p Click "Load CSV file" to get started. This data file should be in a "wide" format, with one row per geographic area (or per topic).
p For geographic data, each row should have an <b>areanm</b> column with the area's name, an #[b areacd] column with its GSS code, and any number of other columns with data or metadata.
p If you want to continue editing an existing PUG file, either click "Load PUG file", or copy-paste the contents of your PUG file into the editor on the left.

h2 Adding data to templates
p <i>Note: Click the "show help" button in the top-right corner for a wider range of ways to sort and filter data, and to format names and numbers.</i>
p Once a data file is loaded, you should have access to three javascript data objects that can be used in your PUG template.
p Firstly <b>place</b> (or <b>row</b>) which contains data for the selected area, and can be used like this §<b>#{'#{place.areanm}'}</b>§ to include the place's name in your template, and §<b>#{'#{place.column_name}'}</b>§ to include a place-specific value.
p Secondly, there is <b>places</b> (or <b>rows</b>), which contains an array of data objects for each of the local authorities in the dataset - it filters out regions, countries etc.. This can be used to find eg. the highest or lowest place for a particular metric, eg. §<b>#{'#{places.sortBy("column_name").areanm}'}</b>§ would give the name of the place with the highest value.
p Finally, there is <b>lookup</b> which allows data for every place in the dataset to be accessed via its GSS code, eg. §<b>#{'#{lookup["W92000004"].column_name}'}</b>§ would give a data value for Wales. This lookup can also be used to access data for a parent of the selected place. Eg. §<b>#{'#{lookup[place.parentcd].areanm}'}</b>§ would give the name of the selected area's parent – assuming there is a "parentcd" column in the CSV and the parent's data is included as a row.

h2 Editable demos

p If you want to skip straight to the action, there are curently three demo PUG files (and associated CSVs) that you can open and edit to get a feel for how the editor works.

h3 1. Simple article demo
p A relatively straightforward example. The output of this demo is used in the #[a(href="https://github.com/robo-embed" target="_blank") robo-embed] Svelte Kit template. #[button(onclick="embedDemo()" class="btn-inline") Click here] to load it.

h3 2. Scrolly article demo
p A more complex demo, suitable for a localised scrollytelling article. The output of this demo is used in the #[a(href="https://github.com/robo-scrolly" target="_blank") robo-scrolly] Svelte Kit template. #[button(onclick="scrollyDemo()" class="btn-inline") Click here] to load it.

h2 Saving your progress
p You can save your progress by clicking "Save PUG file" to download your template a PUG file. If you prefer, you can also just copy-paste the text from the editor on the left into an external file.
p <i>Note: The editor auto-saves your data within the browser's local storage, so you shouldn't lose your progress if the window gets closed accidentally. (If you want to return to this intro, you can click the trash button in the top-left corner.)</i>